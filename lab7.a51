	ORG 00			
	LJMP MAIN
	ORG 0BH ;ISR FOR TIMER
					
	ORG 30H	
MAIN: 
	LCALL BCODE 
	LCALL CONFIG 
	LCALL SDISPLAY			
	LCALL TIMER0H			
	SJMP $	;WAIT 
				
	ORG 50H
MSG0:
	DB "BAUD RATE IS 1200 BPS",0
MSG1:
	DB "BAUD RATE IS 2400 BPS",0
MSG2:
	DB "BAUD RATE IS 4800 BPS",0
MSG3:
	DB "BAUD RATE IS 9600 BPS",0
				
BCODE:
	JB P1.1, BC1 ;IF SW 1 IS 1 JUMP TO BC1
	JB P1.2, MV1 ;IF SW 2 IS 1 JUMP TO MV1
	LJMP MV0
		
BC1:
	JB P1.2, BC2 ;IF SW 3 IS 1 JUMP TO BC2
	LJMP MV2
		
BC2: 
	LJMP MV3
	
MV0:
	MOV B, #0 ;SET SERIAL PORT TO 1200
	MOV TH1, #0F8H ;SETS BAUD TO 1200
	LJMP BCEND ;JUMP TO END OF BCODE
		
MV1:
	MOV B, #1; SETS SERIAL PORT TO 2400
	MOV TH1, #0F4H ; SET BAUD TO 2400
	LJMP BCEND ;JUMP TO END OF BCODE
		
MV2:
	MOV B, #2 ; SETS SERIAL PORT TO 4800
	MOV TH1, #0FAH ; SET BAUD TO 4800
	LJMP BCEND ;JUMP TO END OF BCODE
		
MV3:
	MOV B, #3 ; SET SERIAL PORT TO 9600
	MOV TH1, #0FDH ; SETS BAUD TO 9600
	LJMP BCEND ;JUMP TO END OF BCODE
		
BCEND: ;END OF BCODE
	RETI
	
	ORG 150H
CONFIG: 
	MOV TMOD, #21H ;SET TIMER 0 TO MODE 1 AND SET TIMER 1 TO MODE 2
	SETB EA ;ENABLE TIMER 0 INTERRUPT
	SETB ET0 ;ENABLE TIMER 0
	SETB TR0 ;START TIMER 0
	SETB TR1 ;START TIMER 1
	MOV SCON, #40H ;SET SERIAL PORT RECEPTION DISABLED
	RETI
		
	ORG 200H
SDISPLAY:
	MOV R2, B ; MOVES VALUE IN B INTO R2
	CJNE R2, #0, M2 ;IF R2 IS NOT 0 JUMP TO M2
	MOV DPTR, #MSG0 ;MOVE VALUE OF MSG0 INTO DATA POINTER

MS1: 
	CLR A ;CLEARS ACCUMULATOR
	MOVC A, @A+DPTR ;MOVES VALUE FROM DPTR TO ACCUMULATOR
	JZ FINISH ;JUMPS TO FINISH IF ACCUMULATOR IS 0
	MOV SBUF, A ;ECHOS VALUE IN A
	JNB TI, $ ; WAITS FOR TRANSMISSION
	CLR TI
	INC DPTR ;INCREMENTS DPTR
	LJMP MS1 ;REPEATS
	
M2:
	CJNE R2, #1, M3 ;IF R2 IS NOT 1 JUMP TO M3
	MOV DPTR, #MSG1 ;MOVE VALUE OF MSG1 INTO DATA POINTER
	
MS2:
	CLR A ;CLEARS ACCUMULATOR
	MOVC A, @A+DPTR ;MOVES VALUE FROM DPTR TO ACCUMULATOR
	JZ FINISH ;JUMPS TO FINISH IF ACCUMULATOR IS 0
	MOV SBUF, A ;ECHOS VALUE IN A
	JNB TI, $ ; WAITS FOR TRANSMISSION
	CLR TI
	INC DPTR ;INCREMENTS DPTR
	LJMP MS2 ;REPEATS
	
M3:
	CJNE R2, #2, M4 ;IF R2 IS NOT 2 JUMP TO M4
	MOV DPTR, #MSG2 ;MOVE VALUE OF MSG2 INTO DATA POINTER
	
MS3:
	CLR A ;CLEARS ACCUMULATOR
	MOVC A, @A+DPTR ;MOVES VALUE FROM DPTR TO ACCUMULATOR
	JZ FINISH ;JUMPS TO FINISH IF ACCUMULATOR IS 0
	MOV SBUF, A ;ECHOS VALUE IN A
	JNB TI, $ ;WAITS FOR TRANSMISSION
	CLR TI
	INC DPTR ;INCREMENTS DPTR
	LJMP MS3 ;REPEATS
	
M4:
	MOV DPTR, #MSG3 ;MOVE VALUE OF MSG3 INTO DATA POINTER
	
MS4:
	CLR A ;CLEARS ACCUMULATOR
	MOVC A, @A+DPTR ;MOVES VALUE FROM DPTR TO ACCUMULATOR
	JZ FINISH ;JUMPS TO FINISH IF ACCUMULATOR IS 0
	MOV SBUF, A ;ECHOS VALUE IN A
	JNB TI, $ ;WAITS FOR TRANSMISSION
	CLR TI
	INC DPTR ;INCREMENTS DPTR
	LJMP MS4 ;REPEATS
		
FINISH: ;ENDS DISPLAY
	RETI
		
	ORG 175H
TIMER0H:
	MOV TH0, #00H ;SET TIMER FOR MAXIMUM DELAY
	MOV TL0, #00H ;SET TIMER FOR MAXIMUM DELAY
	MOV R1, P2 ; READ P2
	MOV P3, R1 ; DISPLAY P3
	SETB TR0 ;STARTS TIMER
	SETB TF0 ;STARTS TIMER
	RETI
		
	END